{
	"name": "User Profile HTAP",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool01",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a6aec9dd-741c-45d4-a8ce-eef76fc5d8b7"
			}
		},
		"metadata": {
			"saveOutput": false,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/b617c64a-3f6e-4c20-891e-aeddf74be19e/resourceGroups/data-engineering-synapse-rg/providers/Microsoft.Synapse/workspaces/asaworkspaced228/bigDataPools/SparkPool01",
				"name": "SparkPool01",
				"type": "Spark",
				"endpoint": "https://asaworkspaced228.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# Read from Cosmos DB analytical store into a Spark DataFrame and display 10 rows from the DataFrame\n",
					"# To select a preferred list of regions in a multi-region Cosmos DB account, add .option(\"spark.cosmos.preferredRegions\", \"<Region1>,<Region2>\")\n",
					"\n",
					"df = spark.read\\\n",
					"    .format(\"cosmos.olap\")\\\n",
					"    .option(\"spark.synapse.linkedService\", \"asacosmosdb01\")\\\n",
					"    .option(\"spark.cosmos.container\", \"UserProfileHTAP\")\\\n",
					"    .load()\n",
					"\n",
					"display(df.limit(10))"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"unwanted_cols = {'_attachments','_etag','_rid','_self','_ts','collectionType','id'}\n",
					"\n",
					"# Remove unwanted columns from the columns collection\n",
					"cols = list(set(df.columns) - unwanted_cols)\n",
					"\n",
					"profiles = df.select(cols)\n",
					"\n",
					"display(profiles.limit(10))"
				],
				"attachments": null,
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"profiles.count()"
				],
				"attachments": null,
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import udf, explode\n",
					"\n",
					"preferredProductsFlat=profiles.select('userId',explode('preferredProducts').alias('productId'))\n",
					"productReviewsFlat=profiles.select('userId',explode('productReviews').alias('productReviews'))\n",
					"display(productReviewsFlat.limit(10))"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"display(preferredProductsFlat.limit(20))"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"productReviews = (productReviewsFlat.select('userId','productReviews.productId','productReviews.reviewText')\n",
					"    .orderBy('userId'))\n",
					"\n",
					"display(productReviews.limit(10))"
				],
				"attachments": null,
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"preferredProductReviews = (preferredProductsFlat.join(productReviews,\n",
					"    (preferredProductsFlat.userId == productReviews.userId) &\n",
					"    (preferredProductsFlat.productId == productReviews.productId))\n",
					")\n",
					"\n",
					"display(preferredProductReviews.limit(100))"
				],
				"attachments": null,
				"execution_count": null
			}
		]
	}
}